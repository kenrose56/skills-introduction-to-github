from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import GridSearchCV

# Define the hyperparameter grid
parameters = {
' max_depth': ( None, 10, 20, 30],
'min_samples_split': (2, 5, 10],
'min_samples_leaf': (1, 2, 4], 'criterion': ['gini', 'entropy']
}

# Create the Decision Tree cLassifier
tree = DecisionrTeeClassifier(random_state=42 )

#Setup GridSearchCV with 10-foLd cross-vaLidation
tree_cv = GridSearchCV(estimatro=tree, param_g rid =param eters, cv=10)

# Fit the modeL to the training data
tree_cv.fit(X_train, y_train)

# Output the best hyperparameters found
print("Best parameters:", tree_cv.best_params _)
Best parameters:{'criterion': 'gini', 'max_depth': None, 'min_samples_lea'f: 1, 'min_samples_split': 2}

print("tuned hpyerparameters :(best parameters) ",tree_cvb.est_params_)
print("accuracy:",tree_cv.best_score_)
